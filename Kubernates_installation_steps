## kubernetes installation steps ##
Login as root.
1  apt-get update
2  apt-get install docker.io -y || To install Docker
3  apt-get update
4  systemctl enable docker.service | To enable docker services
5  systemctl start docker.service | To start doker services
Prerequisite for kube environment:
6  apt-get update && apt-get install -y apt-transport-https -> To install https
7  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg|apt-key add -
8  cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
  deb http://apt.kubernetes.io/ kubernetes-xenial main
  EOF
9  apt-get update
10  apt-get install -y kubeadm kubectl kubelet
11.java –version  TO check Java version
   apt install default-jre
   apt install default-jre
   apt install openjdk-11-jre-headless

12.apt-get update
13.kubeadm init | Only to run if you want to make your server as a master (Only master node)

15.goto cd /etc/docker
16. ls
17. create daemon.json file
18. add below content to daemon.json file
{
    "exec-opts": ["native.cgroupdriver=systemd"]
}

in cd /etc/docker
19. sudo systemctl daemon-reload
20. sudo systemctl restart docker
21. sudo systemctl restart kubelet

22. kubeadm reset
23.sudo systemctl restart kubelet

24. gcd /home/ubuntu
25.kubeadm init
-------------------------------------------------------------------
## if below error comes while kubeadm init ##
10248 connection error:
   sudo swapoff -a
   sudo sed -i '/ swap / s/^/#/' /etc/fstab
   and then restart the machine
   kubeadm reset
   kubeadm init --ignore-preflight-errors all
--------------------------------------------------------------------   
26.kubectl get nodes

27.kubectl get pods --all-namespaces |s All showing pending status because there is no pod network has been defined.

------------------------------------------------------------------
kubectl apply -f https://docs.projectcalico.org/v3.20/manifests/calico.yaml        // use this command only if to run the calico pods if coredns is not running
-------------------------------------------------------------------------
29.apt-get update
30.kubectl get pods --all-namespaces

31.kubectl cluster-info

32.kubectl get nodes
----------------------------------------------------------------
## if 8080:localhost error comes ##
    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config
   sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
   and now see pods its dhowing or not
-----------------------------------------------------------------------
33. go to root (cd )
root@ip-172-31-9-112:~# kubeadm token create --print-join-command
kubeadm join 172.31.9.112:6443 --token jnhkbe.3835g4rixwiathz7     --discovery-token-ca-cert-hash sha256:2096c9cd3d82227a4da6139254df6e31dfd997ff0dfa503f6dba805b8e90579d








Steps to setup Nodes:
## setup in nodes ##

34. do same step as done in master except kubeadm init 
35. goto /etc/kubernetes and delete manifesto and pki files(create daemon.json file)
36. then execute below 3 commands serially:-
    sudo systemctl daemon-reload
37. sudo systemctl restart docker
38. systemctl restart kubelet
39. then paste the token generated in server and run it.
40. to ensure the node added to master successfully goto server and run kubectl get nodes.
    make sure the node is added or not.
--------------------------------------------------------
41.  kubectl create -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml




server token:
kubeadm join 172.31.94.220:6443 --token me4s21.pv6197zfy2hm5opg --disc         overy-token-ca-cert-hash sha256:57ea976fa1ca46be133885a66661bd552e62be         95a55b392f0c26c98b31c0cfae

